---
// Learn about using Astro layouts:
// https://docs.astro.build/en/core-concepts/layouts/
import "@/styles/globals.css";
import MainHead from "../components/MainHead.astro";
import Navbar from "@/components/Navbar.astro";
import '@fontsource-variable/heebo';


// Component Imports

interface Props {
  title?: string | undefined;
  description?: string | undefined;
}

const { title, description } = Astro.props;
---

<html lang="en">
  <head>
    <MainHead title={title} description={description} />
  </head>
  <body>
    <div class="max-w-[1100px] mx-auto">
      <Navbar />
      <slot />
    </div>
    
  </body>
</html>

<style>
  body {
    font-family: "Heebo Variable", sans-serif;
    color: #21243D;
  }
</style>

<script is:inline>
  const getThemePreference = () => {
    if (
      typeof localStorage !== "undefined" &&
      localStorage.getItem("theme")
    ) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"](
    "dark"
  );

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark =
        document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
