---
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import Layout from "@/layouts/Layout.astro";
import { GitHubLogoIcon } from "@radix-ui/react-icons";
import { getCollection } from "astro:content";
import { ExternalLink } from "lucide-react";
import { CldImage } from "astro-cloudinary";
import CloudinaryImage from "@/components/CloudinaryImage";

export async function getStaticPaths() {
  const projects = await getCollection("projects");

  return projects.map(({ slug, data }) => ({
    params: {
      project: slug,
    },
    props: {
      project: data,
    },
  }));
}

const { project } = Astro.props;
const {sections,usedTools,palette} = project.detailsPage;
---

<Layout>
  <main class="flex flex-col gap-32">
    <div class="space-y-6">
      <div class="space-y-2">
        <h1 class="text-3xl font-bold">{project.title}</h1>
        <Badge className="text-sm w-fit" variant={"secondary"}
          >{project.type}</Badge
        >
      </div>
      <div class="flex gap-4 flex-wrap">
        <Button>
          Ir a la página
          <ExternalLink className="w-4 h-4 ml-2" />
        </Button>
        <Button variant={"outline"}>
          Ver código
          <GitHubLogoIcon className="w-4 h-4 ml-2" />
        </Button>
      </div>
    </div>
    {
      sections.map((section, index) => {
        const order =
          index % 2 === 0 ? "md:flex-row" : "md:flex-row-reverse";

        return (
          <div class={`flex gap-6 md:gap-12 ${order} flex-col`}>
            <div class={`flex flex-col gap-4 flex-1 `}>
              <h2 class="text-2xl font-bold tracking-tighter">
                {section.title}
              </h2>
              <p class="text-muted-foreground">{section.content}</p>
            </div>
            <div
              class={`flex gap-4 flex-1 max-w-2xl w-fit justify-center flex-wrap`}
            >
              {section.images.map((image) => (
                <CloudinaryImage
                  src={image.src}
                  width={image.width}
                  height={image.height}
                  lazy
                  className={`object-contain rounded-md `}
                  client:load
                />
              ))}
            </div>
          </div>
        );
      })
    }
    
    {
      usedTools.length > 0 && (
        <div class="flex flex-col gap-4">
          <h2 class="text-2xl font-bold tracking-tighter">Herramientas utilizadas</h2>
          <div class="flex gap-4 flex-wrap items-center">
            {usedTools.map((tool) => (
              <img src={`/portfolio-astro/icons/${tool}.webp`} alt={tool} class="w-12 h-12 object-contain rounded-md" />
            ))}
          </div>
        </div>
      )
    }
    {
      palette && (
        <div class="flex flex-col gap-4">
          <h2 class="text-2xl font-bold tracking-tighter">Paleta de colores</h2>
          <div class="flex gap-4 flex-wrap">
            {palette.map((color) => (
              <div
                class="w-12 h-12 rounded-md border border-gray-200"
                style={{ backgroundColor: color }}
              ></div>
            ))}
          </div>
        </div>
      )
    }
  </main>
</Layout>
